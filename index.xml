<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Introduction on Peer-Mesh</title><link>https://dev.galileocap.me/peermesh/</link><description>Recent content in Introduction on Peer-Mesh</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://dev.galileocap.me/peermesh/index.xml" rel="self" type="application/rss+xml"/><item><title>PeerStore API</title><link>https://dev.galileocap.me/peermesh/api/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://dev.galileocap.me/peermesh/api/</guid><description>API # PeerStore # import { PeerStore } from &amp;#39;@galileocap/peer-mesh&amp;#39;; const usePeerStore = new PeerStore(); Used in all other methods. NOTE: You can use usePeerStore.store as a Zustand store, but this is not advised.
init # usePeerStore.init(dfltPeerState = {}, dfltSharedState = {}, cb = () =&amp;gt; {}); Initializes the store and gets you a peer.
The default values will be used when constructing a peer (yours and when connecting to others).</description></item><item><title>Quick Start</title><link>https://dev.galileocap.me/peermesh/quick-start/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://dev.galileocap.me/peermesh/quick-start/</guid><description>Quick Start # Install # npm install @galileocap/peer-mesh Create and initialize a store # In peerStore.js
import { PeerStore } from &amp;#39;@galileocap/peer-mesh&amp;#39;; export default const usePeerStore = new PeerStore(); usePeerStore.init({ number: 0 }, { number: 0 }); Use your data # import { usePeerStore } from &amp;#39;./store&amp;#39;; import { MY_PEER } from &amp;#39;@galileocap/peer-mesh&amp;#39;; function Peer({ peer }) { return &amp;lt;p&amp;gt;id: {peer._id}, number: {peer.number}&amp;lt;/p&amp;gt;; } export default function App() { const myPeer = usePeerStore.</description></item></channel></rss>